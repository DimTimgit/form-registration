import React, { useState, useContext, useEffect, useRef } from "react";
import { FormContext } from "./FormContext";
import { useForm } from "react-hook-form";
import { Redirect, Link } from "react-router-dom";
import { useHistory } from "react-router-dom";
import Dropdown from "./Dropdown";
import './Dropdown.scss';

function RegisterForm() {
  const history = useHistory();
  const { register, handleSubmit, errors, setError, watch } = useForm({});
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [phone, setPhone] = useState("");
  const [users, setUsers] = useContext(FormContext);

  const password = useRef({});
  password.current = watch("password", "");
  const onSubmit = async (data) => {
    history.push("/login");
    alert(JSON.stringify(data));
  };

  const updateName = (e) => {
    setName(e.target.value);
  };

  const updateEmail = (e) => {
    setEmail(e.target.value);
  };
  const updatePhone = (e) => {
    setPhone(e.target.value);
  };

  function onSubmitForm(data) {
    console.log(data);
  }

  const items = [
    {
      id: 1,
      value: 'Pulp Fiction',
    },
    {
      id: 2,
      value: 'The Prestige',
    },
    {
      id: 3,
      value: 'Blade Runner 2049',
    },
  ];

  return (
    <div className="wrapper">
      <div className="form-wrapper">
        <h1>
          –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        </h1>
        <small className="signin">
          –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?
              <Link to="/login">
            <strong className="login_open">–í–æ–π—Ç–∏</strong>
          </Link>
        </small>

        <div className="container">
          <h1 style={{ textAlign: 'center' }}>
            Buy Movies{' '}
            <span role="img" aria-label="Movie projector">
              üé•
        </span>
          </h1>
          <Dropdown title="Select movie" items={items} multiSelect />
        </div>

        <form className="register" onSubmit={handleSubmit(onSubmitForm)}>
          <div className="firstName">
            <label htmlFor="firstName">–ò–º—è</label>
            <input
              className=""
              placeholder="–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è"
              type="text"
              value={name}
              name="name"
              ref={register({
                required: "–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
                pattern: {
                  value: /^[–∞-—è–ê-–Ø—ë–Åa-zA-Z][–∞-—è–ê-–Ø—ë–Åa-zA-Z- \.]{1,20}$/,
                  message: "–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ –∏–º—è",
                },

              })}
              onChange={updateName}
            />
            {errors.name && (
              <p className="error">
                <span>{errors.name.message}</span>
              </p>
            )}
          </div>

          <div className="email">
            <label htmlFor="email">Email</label>
            <input
              className=""
              placeholder="–í–≤–µ–¥–∏—Ç–µ –í–∞—à Email"
              type="email"
              name="email"
              value={email}
              ref={register({
                required: "–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
                pattern: {
                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i,
                  message: "–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã",
                },
              })}
              onChange={updateEmail}
            />
            {errors.email && (
              <p className="error">
                <span>{errors.email.message}</span>
              </p>
            )}
          </div>

          <div className="phone">
            <label htmlFor="phone">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</label>
            <input
              className=" "
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
              type="text"
              value={phone}
              name="phone"
              ref={register({
                required: "–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
                pattern: {
                  value: /^[0-9|\ |\-|\(|\)|\+]{10,17}[0-9|\ |\-|\(|\)]$/,
                  message: "–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                },

              })}
              onChange={updatePhone}
            />
            {errors.phone && (
              <p className="error">
                <span>{errors.phone.message}</span>
              </p>
            )}
          </div>

          <div className="password">
            <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
            <input
              className=" "
              placeholder="–í–≤–µ–¥–∏—Ç–µ –í–∞—à –ø–∞—Ä–æ–ª—å"
              type="password"
              name="password"
              ref={register({
                required: "–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
                minLength: {
                  value: 6,
                  message: "–ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤",
                },
              })}
            />
            {errors.password && (
              <p className="error">
                <span>{errors.password.message}</span>
              </p>
            )}
          </div>

          <div className="repassword">
            <label htmlFor="repassword">–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
            <input
              className=" "
              placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              type="password"
              name="repassword"
              ref={register({
                required: "–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
                validate: (value) =>
                  value === password.current || "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç",
              })}
            />
            {errors.repassword && (
              <p className="error">
                <span>
                  {errors.repassword.message}
                </span>
              </p>
            )}
          </div>

          <div className="createAccount">
            <Link to="/login" style={{ width: "100%" }}>
              <button type="submit" onClick={handleSubmit(onSubmit)}>
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </button>
            </Link>
            {errors.name &&
              errors.email &&
              errors.phone &&
              errors.password &&
              "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è"}
          </div>
        </form>
      </div>
    </div>

  );
};
export default RegisterForm;
